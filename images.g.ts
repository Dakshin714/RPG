// Auto-generated code. Do not edit.
namespace myImages {

    helpers._registerFactory("image", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "image1":
            case "enemyslime":return img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
. . . . 7 d 2 7 7 d 2 7 . . . . 
. . . . 7 f f 7 7 f f 7 . . . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
. . . . 7 7 2 2 2 2 2 7 . . . . 
. . . . 7 7 7 7 3 2 2 7 . . . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`;
            case "image3":
            case "myImage":return img`
. . . . . . . . . . . . . . . . 
. . . . . . . 2 2 . . . . . . . 
. . . . 5 9 5 2 2 5 9 5 . . . . 
. . . . 5 5 5 5 5 5 5 5 . . . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
. . . . 7 d 2 7 7 d 2 7 . . . . 
. . . . 7 f f 7 7 f f 7 . . . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
. . . . 7 7 2 2 2 2 2 7 . . . . 
. . . . 7 7 7 7 3 2 2 7 . . . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`;
            case "{c$SAe0HX0VM":
            case "playerslime":return img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 9 9 9 9 9 9 9 9 . . . . 
. . . . 9 d 1 9 9 d 1 9 . . . . 
. . . . 9 f f 9 9 f f 9 . . . . 
. . . . 9 9 9 9 9 9 9 9 . . . . 
. . . . 9 9 9 9 9 9 9 9 . . . . 
. . . . 9 9 2 2 2 2 2 9 . . . . 
. . . . 9 9 9 9 3 2 2 9 . . . . 
. . . . 9 9 9 9 9 9 9 9 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`;
            case "`5cxR{dZ3hW+*)1!bWFx":
            case "coin":return img`
. . b b b b . . 
. b 5 5 5 5 b . 
b 5 d 3 3 d 5 b 
b 5 3 5 5 1 5 b 
c 5 3 5 5 1 d c 
c d d 1 1 d d c 
. f d d d d f . 
. . f f f f . . 
`;
            case "image2":
            case "playerslimesword":return img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 6 6 6 6 6 6 6 6 . . . . 
. . . . 6 d 1 6 6 d 1 6 . f f f 
. . . . 6 f f 6 6 f f 6 . f d . 
. . . . 6 6 6 6 6 6 6 6 . f 6 . 
. . . . 6 6 6 6 6 6 6 6 . 6 6 . 
. . . . 6 6 2 2 2 2 2 6 . 6 . . 
. . . . 6 6 6 6 3 2 2 6 . . . . 
. . . . 6 6 6 6 6 6 6 6 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`;
            case "image4":
            case "playerslimesword0":return img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . 9 . 
. . . . 6 6 6 6 6 6 6 6 . 9 . . 
. . . . 6 d 1 6 6 d 1 6 . 9 . . 
. . . . 6 f f 6 6 f f 6 . 9 . . 
. . . . 6 6 6 6 6 6 6 6 f f f . 
. . . . 6 6 6 6 6 6 6 6 . 6 6 . 
. . . . 6 6 2 2 2 2 2 6 . 6 . . 
. . . . 6 6 6 6 3 2 2 6 . . . . 
. . . . 6 6 6 6 6 6 6 6 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`;
        }
        return null;
    })

    helpers._registerFactory("animation", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "blinkingplayer":
            case "qK04:X$t[B~C(XXxdB#0":return [img`
. . b b b b . . 
. b 5 5 5 5 b . 
b 5 d 3 3 d 5 b 
b 5 3 5 5 1 5 b 
c 5 3 5 5 1 d c 
c d d 1 1 d d c 
. f d d d d f . 
. . f f f f . . 
`, img`
. . b b b . . . 
. b 5 5 5 b . . 
b 5 d 3 d 5 b . 
b 5 3 5 1 5 b . 
c 5 3 5 1 d c . 
c 5 d 1 d d c . 
. f d d d f . . 
. . f f f . . . 
`, img`
. . . b b . . . 
. . b 5 5 b . . 
. b 5 d 1 5 b . 
. b 5 3 1 5 b . 
. c 5 3 1 d c . 
. c 5 1 d d c . 
. . f d d f . . 
. . . f f . . . 
`, img`
. . . b b . . . 
. . b 5 5 b . . 
. . b 1 1 b . . 
. . b 5 5 b . . 
. . b d d b . . 
. . c d d c . . 
. . c 3 3 c . . 
. . . f f . . . 
`, img`
. . . b b . . . 
. . b 5 5 b . . 
. b 5 1 d 5 b . 
. b 5 1 3 5 b . 
. c d 1 3 5 c . 
. c d d 1 5 c . 
. . f d d f . . 
. . . f f . . . 
`, img`
. . . b b b . . 
. . b 5 5 5 b . 
. b 5 d 3 d 5 b 
. b 5 1 5 3 5 b 
. c d 1 5 3 5 c 
. c d d 1 d 5 c 
. . f d d d f . 
. . . f f f . . 
`];
        }
        return null;
    })

    helpers._registerFactory("song", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "song1":
            case "mySong":return hex`0078000408020502001c000c960064006d019001000478002c010000640032000078000a0100050c0028002c00011e30003400012403001c0001dc00690000045e01000400000000000000000000057800010100030c0028002c00011e30003400012405001c000f0a006400f4010a00000400000000000000000000007800000100020c0010001400012218001c00012407001c00020a006400f401640000040000000000000000000000780000010003070020002400021d2708001c000e050046006603320000040a002d00000064001400017800020100020c0000000400012508000c000127`;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
